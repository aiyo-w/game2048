{"ast":null,"code":"var _jsxFileName = \"H:\\\\WQW\\\\Learning_Web\\\\React\\\\react-project1\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { SquareComponent } from \"./square-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BackgroundGrid() {\n  _s();\n\n  const [broadData, setBroadData] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n  const size = Math.sqrt(broadData.length); //const copyBroadData = broadData;\n  //const broadData = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n\n  const generateRandomIndex = (rangeValue, excludeValue) => {\n    if (rangeValue === excludeValue.length) {\n      return;\n    }\n\n    const randomIndex = Math.floor(Math.random() * rangeValue); // 不匹配数组中不包含随机数\n\n    if (!excludeValue.includes(randomIndex)) {\n      return randomIndex;\n    }\n\n    return generateRandomIndex(rangeValue, excludeValue);\n  };\n\n  const excludeIndex = []; // 生成种子方块的index\n  // 更新broadData\n\n  useEffect(() => {\n    const seedIndex = generateRandomIndex(broadData.length, excludeIndex);\n    broadData[seedIndex] = 1;\n    excludeIndex.push(seedIndex);\n    const newIndex = generateRandomIndex(broadData.length, excludeIndex);\n\n    if (newIndex === undefined) {// TODO:gameover\n    }\n\n    broadData[newIndex] = 1;\n    excludeIndex.push(newIndex);\n    setBroadData(broadData.slice());\n  }, []); // 键盘事件\n\n  document.addEventListener(\"keyup\", function onKeyUp(e) {\n    if (e.repeat) {\n      return;\n    }\n\n    switch (e.keyCode) {\n      case 37:\n        horizontalMove(e.keyCode);\n        break;\n\n      case 38:\n        verticalMove(e.keyCode);\n        break;\n\n      case 39:\n        horizontalMove(e.keyCode);\n        break;\n\n      case 40:\n        verticalMove(e.keyCode);\n        break;\n\n      default:\n        break;\n    }\n  });\n  /* onkeyup = (e) => {\n    switch (e.keyCode) {\n      case 37:\n        horizontalMove(e.keyCode);\n        break;\n      case 38:\n        verticalMove(e.keyCode);\n        break;\n      case 39:\n        horizontalMove(e.keyCode);\n        break;\n      case 40:\n        verticalMove(e.keyCode);\n        break;\n      default:\n        break;\n    }\n  }; */\n  // 垂直移动\n\n  const verticalMove = code => {\n    for (let i = 0; i < size; i++) {\n      const colunmData = [];\n\n      for (let j = 0; j < size; j++) {\n        // 得到每一列的数据\n        colunmData.push(broadData[size * j + i]);\n      }\n\n      let haveValueData = [];\n      colunmData.forEach((item, index) => {\n        if (item !== 0) {\n          haveValueData.push(item); // 取出不为0的值后，剩下的全为O\n\n          colunmData[index] = 0;\n        }\n      });\n\n      if (haveValueData.length > 1) {\n        if (code === 38) {// 往上相加\n        } else {// 往下相加\n        }\n      } else if (haveValueData.length === 1) {\n        if (code === 38) {\n          // 移动到第一位\n          colunmData[0] = haveValueData[0];\n        } else {\n          // 移动到最后一位\n          colunmData[size - 1] = haveValueData[0];\n        }\n      } //const arr = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n      // 将更改后的数据放入新得board数组中\n\n\n      colunmData.forEach((item, index) => {\n        console.log(\"index: \" + (size * index + index)); //arr[i * index + i] = item;\n        // broadData[i * index + i] = item;\n      });\n    }\n  }; // 水平移动\n\n\n  const horizontalMove = code => {\n    for (let i = 0; i < size; i++) {\n      // 获取每一行\n      const rowData = broadData.slice(i * size, (i + 1) * size);\n      console.log(rowData); // 将每行中不为0的值保存在数组中\n\n      let haveValueData = [];\n      rowData.forEach((item, index) => {\n        if (item !== 0) {\n          haveValueData.push(item); // 取出不为0的值后，剩下的全为O\n\n          rowData[index] = 0;\n        }\n      });\n\n      if (haveValueData.length > 1) {\n        if (code === 37) {// 往左相加\n        } else {// 往右相加\n        }\n      } else if (haveValueData.length === 1) {\n        if (code === 37) {\n          // 移动到第一位\n          rowData[0] = haveValueData[0];\n        } else {\n          // 移动到最后一位\n          rowData[size - 1] = haveValueData[0];\n        }\n      } // 将更改后的数据放入新得board数组中\n\n\n      rowData.forEach((item, index) => {\n        broadData[i * size + index] = item;\n      });\n    }\n\n    setBroadData(broadData.slice());\n  };\n\n  const rows = []; // 生成棋盘\n\n  for (let i = 0; i < broadData.length; i += size) {\n    let columns = [];\n\n    for (let j = 0; j < size; j++) {\n      const column = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-cell\",\n        children: broadData[i + j] <= 0 ? \"\" : /*#__PURE__*/_jsxDEV(SquareComponent, {\n          value: broadData[i + j]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)\n      }, i + j, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this);\n\n      columns.push(column);\n    }\n\n    const row = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-row\",\n      children: columns\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this);\n\n    rows.push(row);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background-grid\",\n    children: rows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 10\n  }, this);\n}\n\n_s(BackgroundGrid, \"rme+L1+oL1GCy51M47uZXWOOYlo=\");\n\n_c = BackgroundGrid;\nReactDOM.render( /*#__PURE__*/_jsxDEV(BackgroundGrid, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 198,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\n\nvar _c;\n\n$RefreshReg$(_c, \"BackgroundGrid\");","map":{"version":3,"sources":["H:/WQW/Learning_Web/React/react-project1/src/index.js"],"names":["useEffect","useState","ReactDOM","SquareComponent","BackgroundGrid","broadData","setBroadData","size","Math","sqrt","length","generateRandomIndex","rangeValue","excludeValue","randomIndex","floor","random","includes","excludeIndex","seedIndex","push","newIndex","undefined","slice","document","addEventListener","onKeyUp","e","repeat","keyCode","horizontalMove","verticalMove","code","i","colunmData","j","haveValueData","forEach","item","index","console","log","rowData","rows","columns","column","row","render","getElementById"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,SAASC,eAAT,QAAgC,oBAAhC;;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AACxB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAAD,CAA1C;AACA,QAAMM,IAAI,GAAGC,IAAI,CAACC,IAAL,CAAUJ,SAAS,CAACK,MAApB,CAAb,CAFwB,CAGxB;AACA;;AAEA,QAAMC,mBAAmB,GAAG,CAACC,UAAD,EAAaC,YAAb,KAA8B;AACxD,QAAID,UAAU,KAAKC,YAAY,CAACH,MAAhC,EAAwC;AACtC;AACD;;AAED,UAAMI,WAAW,GAAGN,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACQ,MAAL,KAAgBJ,UAA3B,CAApB,CALwD,CAOxD;;AACA,QAAI,CAACC,YAAY,CAACI,QAAb,CAAsBH,WAAtB,CAAL,EAAyC;AACvC,aAAOA,WAAP;AACD;;AAED,WAAOH,mBAAmB,CAACC,UAAD,EAAaC,YAAb,CAA1B;AACD,GAbD;;AAcA,QAAMK,YAAY,GAAG,EAArB,CApBwB,CAqBxB;AAEA;;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,SAAS,GAAGR,mBAAmB,CAACN,SAAS,CAACK,MAAX,EAAmBQ,YAAnB,CAArC;AAEAb,IAAAA,SAAS,CAACc,SAAD,CAAT,GAAuB,CAAvB;AACAD,IAAAA,YAAY,CAACE,IAAb,CAAkBD,SAAlB;AAEA,UAAME,QAAQ,GAAGV,mBAAmB,CAACN,SAAS,CAACK,MAAX,EAAmBQ,YAAnB,CAApC;;AACA,QAAIG,QAAQ,KAAKC,SAAjB,EAA4B,CAC1B;AACD;;AACDjB,IAAAA,SAAS,CAACgB,QAAD,CAAT,GAAsB,CAAtB;AACAH,IAAAA,YAAY,CAACE,IAAb,CAAkBC,QAAlB;AACAf,IAAAA,YAAY,CAACD,SAAS,CAACkB,KAAV,EAAD,CAAZ;AACD,GAbQ,EAaN,EAbM,CAAT,CAxBwB,CAuCxB;;AACAC,EAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,SAASC,OAAT,CAAiBC,CAAjB,EAAoB;AACrD,QAAIA,CAAC,CAACC,MAAN,EAAc;AACZ;AACD;;AACD,YAAQD,CAAC,CAACE,OAAV;AACE,WAAK,EAAL;AACEC,QAAAA,cAAc,CAACH,CAAC,CAACE,OAAH,CAAd;AACA;;AACF,WAAK,EAAL;AACEE,QAAAA,YAAY,CAACJ,CAAC,CAACE,OAAH,CAAZ;AACA;;AACF,WAAK,EAAL;AACEC,QAAAA,cAAc,CAACH,CAAC,CAACE,OAAH,CAAd;AACA;;AACF,WAAK,EAAL;AACEE,QAAAA,YAAY,CAACJ,CAAC,CAACE,OAAH,CAAZ;AACA;;AACF;AACE;AAdJ;AAgBD,GApBD;AAqBA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;;AACA,QAAME,YAAY,GAAIC,IAAD,IAAU;AAC7B,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG1B,IAApB,EAA0B0B,CAAC,EAA3B,EAA+B;AAC7B,YAAMC,UAAU,GAAG,EAAnB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG5B,IAApB,EAA0B4B,CAAC,EAA3B,EAA+B;AAC7B;AACAD,QAAAA,UAAU,CAACd,IAAX,CAAgBf,SAAS,CAACE,IAAI,GAAG4B,CAAP,GAAWF,CAAZ,CAAzB;AACD;;AAED,UAAIG,aAAa,GAAG,EAApB;AACAF,MAAAA,UAAU,CAACG,OAAX,CAAmB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAClC,YAAID,IAAI,KAAK,CAAb,EAAgB;AACdF,UAAAA,aAAa,CAAChB,IAAd,CAAmBkB,IAAnB,EADc,CAEd;;AACAJ,UAAAA,UAAU,CAACK,KAAD,CAAV,GAAoB,CAApB;AACD;AACF,OAND;;AAQA,UAAIH,aAAa,CAAC1B,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,YAAIsB,IAAI,KAAK,EAAb,EAAiB,CACf;AACD,SAFD,MAEO,CACL;AACD;AACF,OAND,MAMO,IAAII,aAAa,CAAC1B,MAAd,KAAyB,CAA7B,EAAgC;AACrC,YAAIsB,IAAI,KAAK,EAAb,EAAiB;AACf;AACAE,UAAAA,UAAU,CAAC,CAAD,CAAV,GAAgBE,aAAa,CAAC,CAAD,CAA7B;AACD,SAHD,MAGO;AACL;AACAF,UAAAA,UAAU,CAAC3B,IAAI,GAAG,CAAR,CAAV,GAAuB6B,aAAa,CAAC,CAAD,CAApC;AACD;AACF,OA9B4B,CAgC7B;AACA;;;AACAF,MAAAA,UAAU,CAACG,OAAX,CAAmB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAClCC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAalC,IAAI,GAAGgC,KAAP,GAAeA,KAA5B,CAAZ,EADkC,CAElC;AACA;AACD,OAJD;AAKD;AACF,GAzCD,CAjFwB,CA4HxB;;;AACA,QAAMT,cAAc,GAAIE,IAAD,IAAU;AAC/B,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG1B,IAApB,EAA0B0B,CAAC,EAA3B,EAA+B;AAC7B;AACA,YAAMS,OAAO,GAAGrC,SAAS,CAACkB,KAAV,CAAgBU,CAAC,GAAG1B,IAApB,EAA0B,CAAC0B,CAAC,GAAG,CAAL,IAAU1B,IAApC,CAAhB;AACAiC,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ,EAH6B,CAK7B;;AACA,UAAIN,aAAa,GAAG,EAApB;AACAM,MAAAA,OAAO,CAACL,OAAR,CAAgB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC/B,YAAID,IAAI,KAAK,CAAb,EAAgB;AACdF,UAAAA,aAAa,CAAChB,IAAd,CAAmBkB,IAAnB,EADc,CAEd;;AACAI,UAAAA,OAAO,CAACH,KAAD,CAAP,GAAiB,CAAjB;AACD;AACF,OAND;;AAQA,UAAIH,aAAa,CAAC1B,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,YAAIsB,IAAI,KAAK,EAAb,EAAiB,CACf;AACD,SAFD,MAEO,CACL;AACD;AACF,OAND,MAMO,IAAII,aAAa,CAAC1B,MAAd,KAAyB,CAA7B,EAAgC;AACrC,YAAIsB,IAAI,KAAK,EAAb,EAAiB;AACf;AACAU,UAAAA,OAAO,CAAC,CAAD,CAAP,GAAaN,aAAa,CAAC,CAAD,CAA1B;AACD,SAHD,MAGO;AACL;AACAM,UAAAA,OAAO,CAACnC,IAAI,GAAG,CAAR,CAAP,GAAoB6B,aAAa,CAAC,CAAD,CAAjC;AACD;AACF,OA7B4B,CA+B7B;;;AACAM,MAAAA,OAAO,CAACL,OAAR,CAAgB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC/BlC,QAAAA,SAAS,CAAC4B,CAAC,GAAG1B,IAAJ,GAAWgC,KAAZ,CAAT,GAA8BD,IAA9B;AACD,OAFD;AAGD;;AACDhC,IAAAA,YAAY,CAACD,SAAS,CAACkB,KAAV,EAAD,CAAZ;AACD,GAtCD;;AAwCA,QAAMoB,IAAI,GAAG,EAAb,CArKwB,CAsKxB;;AACA,OAAK,IAAIV,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG5B,SAAS,CAACK,MAA9B,EAAsCuB,CAAC,IAAI1B,IAA3C,EAAiD;AAC/C,QAAIqC,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG5B,IAApB,EAA0B4B,CAAC,EAA3B,EAA+B;AAC7B,YAAMU,MAAM,gBACV;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBACGxC,SAAS,CAAC4B,CAAC,GAAGE,CAAL,CAAT,IAAoB,CAApB,GACC,EADD,gBAGC,QAAC,eAAD;AAAiB,UAAA,KAAK,EAAE9B,SAAS,CAAC4B,CAAC,GAAGE,CAAL;AAAjC;AAAA;AAAA;AAAA;AAAA;AAJJ,SAAgCF,CAAC,GAAGE,CAApC;AAAA;AAAA;AAAA;AAAA,cADF;;AASAS,MAAAA,OAAO,CAACxB,IAAR,CAAayB,MAAb;AACD;;AAED,UAAMC,GAAG,gBACP;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACGF;AADH,OAA+BX,CAA/B;AAAA;AAAA;AAAA;AAAA,YADF;;AAKAU,IAAAA,IAAI,CAACvB,IAAL,CAAU0B,GAAV;AACD;;AACD,sBAAO;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,cAAkCH;AAAlC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GA9LQvC,c;;KAAAA,c;AAgMTF,QAAQ,CAAC6C,MAAT,eAAgB,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAoCvB,QAAQ,CAACwB,cAAT,CAAwB,MAAxB,CAApC","sourcesContent":["import { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { SquareComponent } from \"./square-component\";\n\nfunction BackgroundGrid() {\n  const [broadData, setBroadData] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n  const size = Math.sqrt(broadData.length);\n  //const copyBroadData = broadData;\n  //const broadData = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n\n  const generateRandomIndex = (rangeValue, excludeValue) => {\n    if (rangeValue === excludeValue.length) {\n      return;\n    }\n\n    const randomIndex = Math.floor(Math.random() * rangeValue);\n\n    // 不匹配数组中不包含随机数\n    if (!excludeValue.includes(randomIndex)) {\n      return randomIndex;\n    }\n\n    return generateRandomIndex(rangeValue, excludeValue);\n  };\n  const excludeIndex = [];\n  // 生成种子方块的index\n\n  // 更新broadData\n  useEffect(() => {\n    const seedIndex = generateRandomIndex(broadData.length, excludeIndex);\n\n    broadData[seedIndex] = 1;\n    excludeIndex.push(seedIndex);\n\n    const newIndex = generateRandomIndex(broadData.length, excludeIndex);\n    if (newIndex === undefined) {\n      // TODO:gameover\n    }\n    broadData[newIndex] = 1;\n    excludeIndex.push(newIndex);\n    setBroadData(broadData.slice());\n  }, []);\n\n  // 键盘事件\n  document.addEventListener(\"keyup\", function onKeyUp(e) {\n    if (e.repeat) {\n      return;\n    }\n    switch (e.keyCode) {\n      case 37:\n        horizontalMove(e.keyCode);\n        break;\n      case 38:\n        verticalMove(e.keyCode);\n        break;\n      case 39:\n        horizontalMove(e.keyCode);\n        break;\n      case 40:\n        verticalMove(e.keyCode);\n        break;\n      default:\n        break;\n    }\n  });\n  /* onkeyup = (e) => {\n    switch (e.keyCode) {\n      case 37:\n        horizontalMove(e.keyCode);\n        break;\n      case 38:\n        verticalMove(e.keyCode);\n        break;\n      case 39:\n        horizontalMove(e.keyCode);\n        break;\n      case 40:\n        verticalMove(e.keyCode);\n        break;\n      default:\n        break;\n    }\n  }; */\n\n  // 垂直移动\n  const verticalMove = (code) => {\n    for (let i = 0; i < size; i++) {\n      const colunmData = [];\n      for (let j = 0; j < size; j++) {\n        // 得到每一列的数据\n        colunmData.push(broadData[size * j + i]);\n      }\n\n      let haveValueData = [];\n      colunmData.forEach((item, index) => {\n        if (item !== 0) {\n          haveValueData.push(item);\n          // 取出不为0的值后，剩下的全为O\n          colunmData[index] = 0;\n        }\n      });\n\n      if (haveValueData.length > 1) {\n        if (code === 38) {\n          // 往上相加\n        } else {\n          // 往下相加\n        }\n      } else if (haveValueData.length === 1) {\n        if (code === 38) {\n          // 移动到第一位\n          colunmData[0] = haveValueData[0];\n        } else {\n          // 移动到最后一位\n          colunmData[size - 1] = haveValueData[0];\n        }\n      }\n\n      //const arr = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n      // 将更改后的数据放入新得board数组中\n      colunmData.forEach((item, index) => {\n        console.log(\"index: \" + (size * index + index));\n        //arr[i * index + i] = item;\n        // broadData[i * index + i] = item;\n      });\n    }\n  };\n\n  // 水平移动\n  const horizontalMove = (code) => {\n    for (let i = 0; i < size; i++) {\n      // 获取每一行\n      const rowData = broadData.slice(i * size, (i + 1) * size);\n      console.log(rowData);\n\n      // 将每行中不为0的值保存在数组中\n      let haveValueData = [];\n      rowData.forEach((item, index) => {\n        if (item !== 0) {\n          haveValueData.push(item);\n          // 取出不为0的值后，剩下的全为O\n          rowData[index] = 0;\n        }\n      });\n\n      if (haveValueData.length > 1) {\n        if (code === 37) {\n          // 往左相加\n        } else {\n          // 往右相加\n        }\n      } else if (haveValueData.length === 1) {\n        if (code === 37) {\n          // 移动到第一位\n          rowData[0] = haveValueData[0];\n        } else {\n          // 移动到最后一位\n          rowData[size - 1] = haveValueData[0];\n        }\n      }\n\n      // 将更改后的数据放入新得board数组中\n      rowData.forEach((item, index) => {\n        broadData[i * size + index] = item;\n      });\n    }\n    setBroadData(broadData.slice());\n  };\n\n  const rows = [];\n  // 生成棋盘\n  for (let i = 0; i < broadData.length; i += size) {\n    let columns = [];\n    for (let j = 0; j < size; j++) {\n      const column = (\n        <div className=\"grid-cell\" key={i + j}>\n          {broadData[i + j] <= 0 ? (\n            \"\"\n          ) : (\n            <SquareComponent value={broadData[i + j]} />\n          )}\n        </div>\n      );\n      columns.push(column);\n    }\n\n    const row = (\n      <div className=\"grid-row\" key={i}>\n        {columns}\n      </div>\n    );\n    rows.push(row);\n  }\n  return <div className=\"background-grid\">{rows}</div>;\n}\n\nReactDOM.render(<BackgroundGrid />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}