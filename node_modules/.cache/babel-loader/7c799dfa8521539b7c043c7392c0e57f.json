{"ast":null,"code":"var _jsxFileName = \"H:\\\\WQW\\\\Learning_Web\\\\React\\\\react-project1\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\n//import React, { useEffect } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { SquareComponent } from \"./square-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BackgroundGrid() {\n  _s();\n\n  const [broadData, setBroadData] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0]); //const broadData = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n\n  const size = Math.sqrt(broadData.length);\n  const rows = [];\n  useEffect(() => {\n    const generateRandomIndex = (rangeValue, excludeValue) => {\n      if (rangeValue === excludeValue.length) {\n        return;\n      }\n\n      const randomIndex = Math.floor(Math.random() * rangeValue); // 不匹配数组中不包含随机数\n\n      if (!excludeValue.includes(randomIndex)) {\n        return randomIndex;\n      }\n\n      return generateRandomIndex(rangeValue, excludeValue);\n    };\n\n    const excludeIndex = []; // 生成种子方块的index\n\n    const seedIndex = generateRandomIndex(broadData.length, excludeIndex);\n    const copyBroadData = broadData;\n    copyBroadData[seedIndex] = 1;\n    setBroadData(copyBroadData); // broadData[seedIndex] = 1;\n\n    excludeIndex.push(seedIndex); // 生成新增方块的index\n\n    const newIndex = generateRandomIndex(broadData.length, excludeIndex);\n\n    if (newIndex === undefined) {// TODO:gameover\n    }\n\n    copyBroadData[seedIndex] = 1;\n    setBroadData(copyBroadData); // broadData[newIndex] = 1;\n\n    excludeIndex.push(newIndex); // 键盘事件\n\n    /*  useEffect(() => {\n      // 注册键盘事件\n      document.addEventListener(\"keyup\", onkeyup);\n      // 清除键盘事件\n      return () => {\n        document.removeEventListener(\"keyup\", onkeyup);\n      };\n    }, []); */\n\n    document.addEventListener(\"keyup\", onkeyup);\n\n    onkeyup = e => {\n      switch (e.keyCode) {\n        case 37:\n          console.log(\"left\");\n          break;\n\n        case 38:\n          console.log(\"up\");\n          break;\n\n        case 39:\n          moveRight();\n          break;\n\n        case 40:\n          console.log(\"down\");\n          break;\n\n        default:\n          break;\n      }\n    }; // 右移\n\n\n    const moveRight = () => {\n      const newBroadData = [];\n\n      for (let i = 0; i < size; i++) {\n        // 获取每一行\n        const rowData = broadData.slice(i * size, (i + 1) * size); // 将每行中不为0的值保存在数组中\n\n        const haveValueData = [];\n        rowData.forEach((item, index) => {\n          if (item !== 0) {\n            haveValueData.push(item); // 取出不为0的值后，剩下的全为O\n\n            rowData[index] = 0;\n          }\n        });\n\n        if (haveValueData.length > 1) {// 相加\n        } else if (haveValueData.length === 1) {\n          // 移动到最后一位\n          rowData[size - 1] = haveValueData[0];\n        } // 将更改后的数据放入新得board数组中\n\n\n        rowData.forEach(item => {\n          newBroadData.push(item);\n        });\n      }\n\n      setBroadData(newBroadData);\n    };\n  }, [broadData, size]); // 生成棋盘\n\n  for (let i = 0; i < broadData.length; i += size) {\n    let columns = [];\n\n    for (let j = 0; j < size; j++) {\n      const column = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-cell\",\n        children: broadData[i + j] <= 0 ? \"\" : /*#__PURE__*/_jsxDEV(SquareComponent, {\n          value: broadData[i + j]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)\n      }, i + j, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this);\n\n      columns.push(column);\n    }\n\n    const row = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-row\",\n      children: columns\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this);\n\n    rows.push(row);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background-grid\",\n    children: rows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 10\n  }, this);\n}\n\n_s(BackgroundGrid, \"rme+L1+oL1GCy51M47uZXWOOYlo=\");\n\n_c = BackgroundGrid;\nReactDOM.render( /*#__PURE__*/_jsxDEV(BackgroundGrid, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 137,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\n\nvar _c;\n\n$RefreshReg$(_c, \"BackgroundGrid\");","map":{"version":3,"sources":["H:/WQW/Learning_Web/React/react-project1/src/index.js"],"names":["useEffect","useState","ReactDOM","SquareComponent","BackgroundGrid","broadData","setBroadData","size","Math","sqrt","length","rows","generateRandomIndex","rangeValue","excludeValue","randomIndex","floor","random","includes","excludeIndex","seedIndex","copyBroadData","push","newIndex","undefined","document","addEventListener","onkeyup","e","keyCode","console","log","moveRight","newBroadData","i","rowData","slice","haveValueData","forEach","item","index","columns","j","column","row","render","getElementById"],"mappings":"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","sourcesContent":["//import React, { useEffect } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { SquareComponent } from \"./square-component\";\n\nfunction BackgroundGrid() {\n  const [broadData, setBroadData] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n  //const broadData = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n  const size = Math.sqrt(broadData.length);\n  const rows = [];\n\n  useEffect(() => {\n    const generateRandomIndex = (rangeValue, excludeValue) => {\n      if (rangeValue === excludeValue.length) {\n        return;\n      }\n\n      const randomIndex = Math.floor(Math.random() * rangeValue);\n\n      // 不匹配数组中不包含随机数\n      if (!excludeValue.includes(randomIndex)) {\n        return randomIndex;\n      }\n\n      return generateRandomIndex(rangeValue, excludeValue);\n    };\n\n    const excludeIndex = [];\n    // 生成种子方块的index\n    const seedIndex = generateRandomIndex(broadData.length, excludeIndex);\n\n    const copyBroadData = broadData;\n    copyBroadData[seedIndex] = 1;\n    setBroadData(copyBroadData);\n    // broadData[seedIndex] = 1;\n    excludeIndex.push(seedIndex);\n\n    // 生成新增方块的index\n    const newIndex = generateRandomIndex(broadData.length, excludeIndex);\n    if (newIndex === undefined) {\n      // TODO:gameover\n    }\n    copyBroadData[seedIndex] = 1;\n    setBroadData(copyBroadData);\n    // broadData[newIndex] = 1;\n    excludeIndex.push(newIndex);\n\n    // 键盘事件\n    /*  useEffect(() => {\n      // 注册键盘事件\n      document.addEventListener(\"keyup\", onkeyup);\n      // 清除键盘事件\n      return () => {\n        document.removeEventListener(\"keyup\", onkeyup);\n      };\n    }, []); */\n    document.addEventListener(\"keyup\", onkeyup);\n    onkeyup = (e) => {\n      switch (e.keyCode) {\n        case 37:\n          console.log(\"left\");\n          break;\n        case 38:\n          console.log(\"up\");\n          break;\n        case 39:\n          moveRight();\n          break;\n        case 40:\n          console.log(\"down\");\n          break;\n        default:\n          break;\n      }\n    };\n\n    // 右移\n    const moveRight = () => {\n      const newBroadData = [];\n      for (let i = 0; i < size; i++) {\n        // 获取每一行\n        const rowData = broadData.slice(i * size, (i + 1) * size);\n\n        // 将每行中不为0的值保存在数组中\n        const haveValueData = [];\n        rowData.forEach((item, index) => {\n          if (item !== 0) {\n            haveValueData.push(item);\n            // 取出不为0的值后，剩下的全为O\n            rowData[index] = 0;\n          }\n        });\n\n        if (haveValueData.length > 1) {\n          // 相加\n        } else if (haveValueData.length === 1) {\n          // 移动到最后一位\n          rowData[size - 1] = haveValueData[0];\n        }\n\n        // 将更改后的数据放入新得board数组中\n        rowData.forEach((item) => {\n          newBroadData.push(item);\n        });\n      }\n      setBroadData(newBroadData);\n    };\n  }, [broadData, size]);\n\n  // 生成棋盘\n  for (let i = 0; i < broadData.length; i += size) {\n    let columns = [];\n    for (let j = 0; j < size; j++) {\n      const column = (\n        <div className=\"grid-cell\" key={i + j}>\n          {broadData[i + j] <= 0 ? (\n            \"\"\n          ) : (\n            <SquareComponent value={broadData[i + j]} />\n          )}\n        </div>\n      );\n      columns.push(column);\n    }\n\n    const row = (\n      <div className=\"grid-row\" key={i}>\n        {columns}\n      </div>\n    );\n    rows.push(row);\n  }\n  return <div className=\"background-grid\">{rows}</div>;\n}\n\nReactDOM.render(<BackgroundGrid />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}