{"ast":null,"code":"var _jsxFileName = \"H:\\\\WQW\\\\Learning_Web\\\\React\\\\react-project1\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { SquareComponent } from \"./square-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BackgroundGrid() {\n  const generateRandomIndex = (rangeValue, excludeValue) => {\n    if (rangeValue === excludeValue.length) {\n      return;\n    }\n\n    const randomIndex = Math.floor(Math.random() * rangeValue); // 不匹配数组中不包含随机数\n\n    if (!excludeValue.includes(randomIndex)) {\n      return randomIndex;\n    }\n\n    generateRandomIndex(rangeValue, excludeValue);\n  };\n\n  const broadData = [0, 0, 0, 0];\n  const size = Math.sqrt(broadData.length);\n  const excludeIndex = []; // 生成种子方块的index\n\n  const seedIndex = generateRandomIndex(broadData.length, excludeIndex);\n  broadData[seedIndex] = 1;\n  excludeIndex.push(seedIndex); // 生成新增方块的index\n\n  const newIndex = generateRandomIndex(broadData.length, excludeIndex);\n\n  if (!newIndex) {\n    // TODO:gameover\n    return;\n  }\n\n  broadData[newIndex] = 1;\n  excludeIndex.push(newIndex);\n  console.log(excludeIndex);\n  const rows = [];\n\n  for (let i = 0; i < broadData.length; i += size) {\n    let columns = [];\n\n    for (let j = 0; j < size; j++) {\n      const column = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-cell\",\n        children: broadData[i + j] <= 0 ? \"\" : /*#__PURE__*/_jsxDEV(SquareComponent, {\n          value: broadData[i + j]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, i + j, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this);\n\n      columns.push(column);\n    }\n\n    const row = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-row\",\n      children: columns\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n\n    rows.push(row);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background-grid\",\n    children: rows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 10\n  }, this);\n}\n\n_c = BackgroundGrid;\nReactDOM.render( /*#__PURE__*/_jsxDEV(BackgroundGrid, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 69,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\n\nvar _c;\n\n$RefreshReg$(_c, \"BackgroundGrid\");","map":{"version":3,"sources":["H:/WQW/Learning_Web/React/react-project1/src/index.js"],"names":["React","ReactDOM","SquareComponent","BackgroundGrid","generateRandomIndex","rangeValue","excludeValue","length","randomIndex","Math","floor","random","includes","broadData","size","sqrt","excludeIndex","seedIndex","push","newIndex","console","log","rows","i","columns","j","column","row","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,SAASC,eAAT,QAAgC,oBAAhC;;;AAEA,SAASC,cAAT,GAA0B;AACxB,QAAMC,mBAAmB,GAAG,CAACC,UAAD,EAAaC,YAAb,KAA8B;AACxD,QAAID,UAAU,KAAKC,YAAY,CAACC,MAAhC,EAAwC;AACtC;AACD;;AAED,UAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,UAA3B,CAApB,CALwD,CAOxD;;AACA,QAAI,CAACC,YAAY,CAACM,QAAb,CAAsBJ,WAAtB,CAAL,EAAyC;AACvC,aAAOA,WAAP;AACD;;AACDJ,IAAAA,mBAAmB,CAACC,UAAD,EAAaC,YAAb,CAAnB;AACD,GAZD;;AAcA,QAAMO,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAlB;AACA,QAAMC,IAAI,GAAGL,IAAI,CAACM,IAAL,CAAUF,SAAS,CAACN,MAApB,CAAb;AAEA,QAAMS,YAAY,GAAG,EAArB,CAlBwB,CAmBxB;;AACA,QAAMC,SAAS,GAAGb,mBAAmB,CAACS,SAAS,CAACN,MAAX,EAAmBS,YAAnB,CAArC;AAEAH,EAAAA,SAAS,CAACI,SAAD,CAAT,GAAuB,CAAvB;AACAD,EAAAA,YAAY,CAACE,IAAb,CAAkBD,SAAlB,EAvBwB,CAyBxB;;AACA,QAAME,QAAQ,GAAGf,mBAAmB,CAACS,SAAS,CAACN,MAAX,EAAmBS,YAAnB,CAApC;;AACA,MAAI,CAACG,QAAL,EAAe;AACb;AACA;AACD;;AACDN,EAAAA,SAAS,CAACM,QAAD,CAAT,GAAsB,CAAtB;AACAH,EAAAA,YAAY,CAACE,IAAb,CAAkBC,QAAlB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ;AAEA,QAAMM,IAAI,GAAG,EAAb;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,SAAS,CAACN,MAA9B,EAAsCgB,CAAC,IAAIT,IAA3C,EAAiD;AAC/C,QAAIU,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,IAApB,EAA0BW,CAAC,EAA3B,EAA+B;AAC7B,YAAMC,MAAM,gBACV;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBACGb,SAAS,CAACU,CAAC,GAAGE,CAAL,CAAT,IAAoB,CAApB,GACC,EADD,gBAGC,QAAC,eAAD;AAAiB,UAAA,KAAK,EAAEZ,SAAS,CAACU,CAAC,GAAGE,CAAL;AAAjC;AAAA;AAAA;AAAA;AAAA;AAJJ,SAAgCF,CAAC,GAAGE,CAApC;AAAA;AAAA;AAAA;AAAA,cADF;;AASAD,MAAAA,OAAO,CAACN,IAAR,CAAaQ,MAAb;AACD;;AAED,UAAMC,GAAG,gBACP;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACGH;AADH,OAA+BD,CAA/B;AAAA;AAAA;AAAA;AAAA,YADF;;AAKAD,IAAAA,IAAI,CAACJ,IAAL,CAAUS,GAAV;AACD;;AACD,sBAAO;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,cAAkCL;AAAlC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KA7DQnB,c;AA+DTF,QAAQ,CAAC2B,MAAT,eAAgB,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAoCC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApC","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { SquareComponent } from \"./square-component\";\n\nfunction BackgroundGrid() {\n  const generateRandomIndex = (rangeValue, excludeValue) => {\n    if (rangeValue === excludeValue.length) {\n      return;\n    }\n\n    const randomIndex = Math.floor(Math.random() * rangeValue);\n\n    // 不匹配数组中不包含随机数\n    if (!excludeValue.includes(randomIndex)) {\n      return randomIndex;\n    }\n    generateRandomIndex(rangeValue, excludeValue);\n  };\n\n  const broadData = [0, 0, 0, 0];\n  const size = Math.sqrt(broadData.length);\n\n  const excludeIndex = [];\n  // 生成种子方块的index\n  const seedIndex = generateRandomIndex(broadData.length, excludeIndex);\n\n  broadData[seedIndex] = 1;\n  excludeIndex.push(seedIndex);\n\n  // 生成新增方块的index\n  const newIndex = generateRandomIndex(broadData.length, excludeIndex);\n  if (!newIndex) {\n    // TODO:gameover\n    return;\n  }\n  broadData[newIndex] = 1;\n  excludeIndex.push(newIndex);\n\n  console.log(excludeIndex);\n\n  const rows = [];\n\n  for (let i = 0; i < broadData.length; i += size) {\n    let columns = [];\n    for (let j = 0; j < size; j++) {\n      const column = (\n        <div className=\"grid-cell\" key={i + j}>\n          {broadData[i + j] <= 0 ? (\n            \"\"\n          ) : (\n            <SquareComponent value={broadData[i + j]} />\n          )}\n        </div>\n      );\n      columns.push(column);\n    }\n\n    const row = (\n      <div className=\"grid-row\" key={i}>\n        {columns}\n      </div>\n    );\n    rows.push(row);\n  }\n  return <div className=\"background-grid\">{rows}</div>;\n}\n\nReactDOM.render(<BackgroundGrid />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}