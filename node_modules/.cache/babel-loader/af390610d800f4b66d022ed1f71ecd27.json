{"ast":null,"code":"var _jsxFileName = \"H:\\\\WQW\\\\Learning_Web\\\\React\\\\react-project1\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\n//import React, { useEffect } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { SquareComponent } from \"./square-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BackgroundGrid() {\n  _s();\n\n  const generateRandomIndex = (rangeValue, excludeValue) => {\n    if (rangeValue === excludeValue.length) {\n      return;\n    }\n\n    const randomIndex = Math.floor(Math.random() * rangeValue); // 不匹配数组中不包含随机数\n\n    if (!excludeValue.includes(randomIndex)) {\n      return randomIndex;\n    }\n\n    return generateRandomIndex(rangeValue, excludeValue);\n  };\n\n  const [broadData, setBroadData] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0]); //const broadData = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n\n  const size = Math.sqrt(broadData.length);\n  const excludeIndex = []; // 生成种子方块的index\n\n  const seedIndex = generateRandomIndex(broadData.length, excludeIndex);\n  const copyBroadData = broadData;\n  copyBroadData[seedIndex] = 1;\n  setBroadData(copyBroadData); // broadData[seedIndex] = 1;\n\n  excludeIndex.push(seedIndex); // 生成新增方块的index\n\n  const newIndex = generateRandomIndex(broadData.length, excludeIndex);\n\n  if (newIndex === undefined) {// TODO:gameover\n  }\n\n  copyBroadData[seedIndex] = 1;\n  setBroadData(copyBroadData); // broadData[newIndex] = 1;\n\n  excludeIndex.push(newIndex);\n  const rows = []; // 键盘事件\n\n  /*  useEffect(() => {\n    // 注册键盘事件\n    document.addEventListener(\"keyup\", onkeyup);\n    // 清除键盘事件\n    return () => {\n      document.removeEventListener(\"keyup\", onkeyup);\n    };\n  }, []); */\n\n  document.addEventListener(\"keyup\", onkeyup);\n\n  onkeyup = e => {\n    switch (e.keyCode) {\n      case 37:\n        console.log(\"left\");\n        break;\n\n      case 38:\n        console.log(\"up\");\n        break;\n\n      case 39:\n        moveRight();\n        break;\n\n      case 40:\n        console.log(\"down\");\n        break;\n\n      default:\n        break;\n    }\n  }; // 右移\n\n\n  const moveRight = () => {\n    const newBroadData = [];\n\n    for (let i = 0; i < size; i++) {\n      // 获取每一行\n      const rowData = broadData.slice(i * size, (i + 1) * size); // 将每行中不为0的值保存在数组中\n\n      const haveValueData = [];\n      rowData.forEach((item, index) => {\n        if (item !== 0) {\n          haveValueData.push(item); // 取出不为0的值后，剩下的全为O\n\n          rowData[index] = 0;\n        }\n      });\n\n      if (haveValueData.length > 1) {// 相加\n      } else if (haveValueData.length === 1) {\n        // 移动到最后一位\n        rowData[size - 1] = haveValueData[0];\n      } // 将更改后的数据放入新得board数组中\n\n\n      rowData.forEach(item => {\n        newBroadData.push(item);\n      });\n    }\n\n    setBroadData(newBroadData);\n  }; // 生成棋盘\n\n\n  for (let i = 0; i < broadData.length; i += size) {\n    let columns = [];\n\n    for (let j = 0; j < size; j++) {\n      const column = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-cell\",\n        children: broadData[i + j] <= 0 ? \"\" : /*#__PURE__*/_jsxDEV(SquareComponent, {\n          value: broadData[i + j]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, i + j, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this);\n\n      columns.push(column);\n    }\n\n    const row = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-row\",\n      children: columns\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this);\n\n    rows.push(row);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background-grid\",\n    children: rows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 10\n  }, this);\n}\n\n_s(BackgroundGrid, \"EyNShKTbMct9KBOAFhFQ9ROqy5I=\");\n\n_c = BackgroundGrid;\nReactDOM.render( /*#__PURE__*/_jsxDEV(BackgroundGrid, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 136,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\n\nvar _c;\n\n$RefreshReg$(_c, \"BackgroundGrid\");","map":{"version":3,"sources":["H:/WQW/Learning_Web/React/react-project1/src/index.js"],"names":["useEffect","useState","ReactDOM","SquareComponent","BackgroundGrid","generateRandomIndex","rangeValue","excludeValue","length","randomIndex","Math","floor","random","includes","broadData","setBroadData","size","sqrt","excludeIndex","seedIndex","copyBroadData","push","newIndex","undefined","rows","document","addEventListener","onkeyup","e","keyCode","console","log","moveRight","newBroadData","i","rowData","slice","haveValueData","forEach","item","index","columns","j","column","row","render","getElementById"],"mappings":"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","sourcesContent":["//import React, { useEffect } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { SquareComponent } from \"./square-component\";\n\nfunction BackgroundGrid() {\n  const generateRandomIndex = (rangeValue, excludeValue) => {\n    if (rangeValue === excludeValue.length) {\n      return;\n    }\n\n    const randomIndex = Math.floor(Math.random() * rangeValue);\n\n    // 不匹配数组中不包含随机数\n    if (!excludeValue.includes(randomIndex)) {\n      return randomIndex;\n    }\n\n    return generateRandomIndex(rangeValue, excludeValue);\n  };\n\n  const [broadData, setBroadData] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n  //const broadData = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n  const size = Math.sqrt(broadData.length);\n\n  const excludeIndex = [];\n  // 生成种子方块的index\n  const seedIndex = generateRandomIndex(broadData.length, excludeIndex);\n\n  const copyBroadData = broadData;\n  copyBroadData[seedIndex] = 1;\n  setBroadData(copyBroadData);\n  // broadData[seedIndex] = 1;\n  excludeIndex.push(seedIndex);\n\n  // 生成新增方块的index\n  const newIndex = generateRandomIndex(broadData.length, excludeIndex);\n  if (newIndex === undefined) {\n    // TODO:gameover\n  }\n  copyBroadData[seedIndex] = 1;\n  setBroadData(copyBroadData);\n  // broadData[newIndex] = 1;\n  excludeIndex.push(newIndex);\n\n  const rows = [];\n\n  // 键盘事件\n  /*  useEffect(() => {\n    // 注册键盘事件\n    document.addEventListener(\"keyup\", onkeyup);\n    // 清除键盘事件\n    return () => {\n      document.removeEventListener(\"keyup\", onkeyup);\n    };\n  }, []); */\n  document.addEventListener(\"keyup\", onkeyup);\n  onkeyup = (e) => {\n    switch (e.keyCode) {\n      case 37:\n        console.log(\"left\");\n        break;\n      case 38:\n        console.log(\"up\");\n        break;\n      case 39:\n        moveRight();\n        break;\n      case 40:\n        console.log(\"down\");\n        break;\n      default:\n        break;\n    }\n  };\n\n  // 右移\n  const moveRight = () => {\n    const newBroadData = [];\n    for (let i = 0; i < size; i++) {\n      // 获取每一行\n      const rowData = broadData.slice(i * size, (i + 1) * size);\n\n      // 将每行中不为0的值保存在数组中\n      const haveValueData = [];\n      rowData.forEach((item, index) => {\n        if (item !== 0) {\n          haveValueData.push(item);\n          // 取出不为0的值后，剩下的全为O\n          rowData[index] = 0;\n        }\n      });\n\n      if (haveValueData.length > 1) {\n        // 相加\n      } else if (haveValueData.length === 1) {\n        // 移动到最后一位\n        rowData[size - 1] = haveValueData[0];\n      }\n\n      // 将更改后的数据放入新得board数组中\n      rowData.forEach((item) => {\n        newBroadData.push(item);\n      });\n    }\n    setBroadData(newBroadData);\n  };\n\n  // 生成棋盘\n  for (let i = 0; i < broadData.length; i += size) {\n    let columns = [];\n    for (let j = 0; j < size; j++) {\n      const column = (\n        <div className=\"grid-cell\" key={i + j}>\n          {broadData[i + j] <= 0 ? (\n            \"\"\n          ) : (\n            <SquareComponent value={broadData[i + j]} />\n          )}\n        </div>\n      );\n      columns.push(column);\n    }\n\n    const row = (\n      <div className=\"grid-row\" key={i}>\n        {columns}\n      </div>\n    );\n    rows.push(row);\n  }\n  return <div className=\"background-grid\">{rows}</div>;\n}\n\nReactDOM.render(<BackgroundGrid />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}